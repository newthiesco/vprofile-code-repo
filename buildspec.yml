version: 0.2
#good-one-for-real

env:
  variables:
    SONAR_HOST_URL: "https://sonarcloud.io"               # Fixed SONAR host URL
    SONAR_ORG: "kubeirving-projects"                      # Organization for SonarCloud
    SONAR_PROJECT: "vprofile-repo"                        # Sonar project name
    CODEARTIFACT_TOKEN: "CODEARTIFACT_TOKEN"     # SSM parameter for CodeArtifact token
    SONAR_TOKEN: "VPROFILE_SONARTOKEN"                  # SonarQube token (best stored in AWS Secrets Manager)
    MAVEN_OPTS: "-Xmx2g"     #added


phases:
  install:
    commands:

      - echo "Setting up Java 17..."
      - sudo apt-get update
      - sudo apt-get install -y openjdk-17-jdk
      - java -version  # To verify the version
      - sudo apt-get install -y maven
       - curl -sS https://downloads.sonarsource.com/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip -o sonar-scanner.zip
       - unzip sonar-scanner.zip -d /opt
       - sudo mv /opt/sonar-scanner-4.8.0.2856-linux /opt/sonar-scanner
       - export PATH=$PATH:/opt/sonar-scanner/bin
      
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - echo "Current path is >>>"
      - sh $pwd
      - unzip ./sonar-scanner-cli-4.7.0.2747-linux.zip
      - ls $pwd
      - export PATH=$PATH:./sonar-scanner-4.7.0.2747-linux/bin/
      
      - echo "Retrieving CODEARTIFACT_TOKEN from SSM..."
      - export CODEARTIFACT_TOKEN=$(aws ssm get-parameter --name "/aws/ssm/CODEARTIFACT_TOKEN" --query "Parameter.Value" --output text)

      # Authenticate with AWS CodeArtifact using the retrieved token
       - echo "Authenticating with AWS CodeArtifact..."
       - aws codeartifact login --tool maven --repository vprofile-maven-repo --domain visualpath --authorization-token $CODEARTIFACT_TOKEN   
   export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain visualpath --domain-owner 339712930264 --region us-east-1 --query authorizationToken --output text`

      - 

      # If you're using npm, you can also use:
       aws codeartifact login --tool npm --repository <your-repository-name> --domain <your-domain-name> --authorization-token $CODEARTIFACT_TOKEN

      # Install dependencies (Maven example)



  pre_build:
    commands:
      echo "Preparing for SonarCloud analysis..."

  build:
    commands:
     - echo "Running SonarCloud analysis with Maven..."
      - mvn clean install -X
     - mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
        -Dsonar.projectKey=$SONAR_PROJECT \
        -Dsonar.organization=$SONAR_ORG \
        -Dsonar.login=$SONAR_TOKEN \
        -Dsonar.host.url=$SONAR_HOST_URL \
         -Dsonar.codeartifact.token=$CODEARTIFACT_TOKEN
         -Dsonar.java.jdkHome=/usr/lib/jvm/java-17-openjdk-amd64  # Adjust if necessary
        
        
    # - 
          echo "Running SonarCloud analysis with Maven..."
       mvn clean install
      mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
         -Dsonar.projectKey=$SONAR_PROJECT \
         -Dsonar.organization=$SONAR_ORG \
         -Dsonar.login=$SONAR_TOKEN \
         -Dsonar.host.url=$SONAR_HOST_URL \
         -Dsonar.codeartifact.token=$CODEARTIFACT_TOKEN \
         -Dsonar.java.jdkHome=/usr/lib/jvm/java-11-openjdk-amd64

  post_build:
    commands:
      echo "SonarCloud analysis complete."

artifacts:
  files:
    - target/*.jar  # Adjust based on your build artifacts

cache:
  paths:
    - '/root/.m2/**/*'  # Cache Maven dependencies to speed up buildsversion: 0.2
#good-one-for-real








